version: "3.7"
services:

## Postgres Database

  ## Create external postgres network:
    # docker network create --gateway 192.168.251.1 --subnet 192.168.251.0/24 postgres

  ## Suggested procedure to create new databases:
  ## Replace <THESE VALUES>
    # docker exec -it postgres su postgres
    # createuser --pwprompt <USER>
    # createdb <DATABASE NAME> --owner=<USER> --encoding=UTF8
    # psql --u postgres
    # GRANT ALL PRIVILEGES ON DATABASE <database name> TO <user>;
    # exit
    # exit

  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    networks:
      - traefik_proxy
#      postgres:
#        ipv4_address: 192.168.251.251
    ports:
      - "5432:5432"
    security_opt:
      - no-new-privileges:true
    volumes:
      - $USERDIR/docker/postgres/postgres:/var/lib/postgresql/data
      - $USERDIR/docker/postgres/dbbackup:/dbbackup
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_PASSWORD=$PG_ROOT_PASSWORD

## PGAdmin - Postgres Admin Tool
  pgadmin:
    container_name: pgadmin
    image: thajeztah/pgadmin4:latest
    restart: always
    depends_on:
      - postgres
    networks:
      - traefik_proxy
#      - postgres
#    ports:
#      - "5050:5050"
    security_opt:
      - no-new-privileges:true
    volumes:
      - $USERDIR/docker/postgres/pgadmin:/pgadmin
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.pgadmin-rtr.entrypoints=https"
      - "traefik.http.routers.pgadmin-rtr.rule=Host(`pgadmin.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.pgadmin-rtr.middlewares=secure-chain@file"
      ## HTTP Services
      - "traefik.http.routers.pgadmin-rtr.service=pgadmin-svc"
      - "traefik.http.services.pgadmin-svc.loadbalancer.server.port=5050"

networks:
  traefik_proxy:
    external: true
#  postgres:
#    external: true
