# https://www.keycloak.org/documentation.html
# https://www.keycloak.org/docs/latest/getting_started/index.html
# https://hub.docker.com/_/postgres
# https://hub.docker.com/r/jboss/keycloak/

# Need to start the traefik network before running:
  # docker network create traefik_proxy
# Trail logs using (docker logs -f traefik). Change "traefik" to name of container you want to trail

version: "3.7"
services:

## Traefik - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:v2.0.0-rc4
    restart: always
    networks:
      - traefik_proxy
    ports:
      # https://www.reddit.com/r/docker/comments/c1wrep/traefik_reverse_proxy_question_docker_overlay/
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
#      - "8080:8080"
    volumes:
      - $TRAEFIK2DIR/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## HTTPS entrypoint
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`traefik.$DOMAINNAME`)
      - traefik.http.routers.traefik.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.traefik.middlewares=traefik-headers
      - traefik.http.middlewares.traefik-headers.headers.SSLHost=traefik.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.traefik.middlewares=secure-chain-nocookie@file
      ## Services
      - traefik.http.routers.traefik.service=traefik
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      ## TRAEFIK API
#      - traefik.http.routers.api.entrypoints=traefik
      - traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)
      - traefik.http.routers.api.service=api@internal # API must be secured with auth
      - traefik.http.routers.api.middlewares=secure-chain-nocookie@file



#      - traefik.http.routers.api.entrypoints=https
#      - traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)
#      - traefik.http.routers.api.service=api@internal
#      - traefik.http.services.api.loadbalancer.server.port=8080

#      - traefik.tcp.routers.1traefik.entrypoints=https
#      - traefik.tcp.routers.1traefik.tls=true
#      - traefik.tcp.routers.1traefik.rule=HostSNI(`traefik.$DOMAINNAME`)
#      - traefik.tcp.routers.1traefik.tls.certresolver=cloudflare
#      - traefik.tcp.routers.1traefik.service=1traefik
#      - traefik.tcp.services.1traefik.loadbalancer.server.port=8080

#      - traefik.http.middlewares.https-only.redirectscheme.scheme=https
#      - traefik.http.middlewares.test-auth.forwardauth.trustForwardHeader=true
#      - traefik.http.middlewares.test-auth.forwardauth.Address=http://oauth:4181
#      - traefik.http.middlewares.test-auth.forwardauth.authResponseHeaders=X-Forwarded-User, X-WebAuth-User
#      - traefik.http.middlewares.secure-headers.headers.SSLRedirect=true
#      - traefik.http.middlewares.secure-headers.headers.SSLForceHost=true
#      - traefik.http.middlewares.secure-headers.headers.STSSeconds=315360000
#      - traefik.http.middlewares.secure-headers.headers.STSIncludeSubDomains=true
#      - traefik.http.middlewares.secure-headers.headers.STSPreload=true
#      - traefik.http.middlewares.secure-headers.headers.ForceSTSHeader=true
#      - traefik.http.middlewares.secure-headers.headers.FrameDeny=true
#      - traefik.http.middlewares.secure-headers.headers.CustomFrameOptionsValue=SAMEORIGIN
#      - traefik.http.middlewares.secure-headers.headers.ContentTypeNosniff=true
#      - traefik.http.middlewares.secure-headers.headers.BrowserXssFilter=true
#      - traefik.http.middlewares.secure-headers.headers.ContentSecurityPolicy=default-src 'self'; frame-ancestors 'self'; object-src 'none'; base-uri 'none';
#      - traefik.http.middlewares.secure-headers.headers.ReferrerPolicy=same-origin
#      - traefik.http.middlewares.secure-headers.headers.FeaturePolicy=camera 'none'; display-capture 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';
#      - traefik.http.middlewares.secure-headers.headers.customResponseHeaders.X-Robots-Tag=none,noarchive,nosnippet,notranslate,noimageindex,
#      - traefik.http.middlewares.secure-headers.headers.customResponseHeaders.Set-Cookie=__Secure-sess=123; path=/; HttpOnly; Secure; SameSite=Lax;
#      - "traefik.http.middlewares.testHeader.headers.allowedHosts=$DOMAINNAME"
#      customFrameOptionsValue: 'allow-from https://${DOMAINNAME}'

## Who Am I?? - Show Headers
  # curl -H Host:whoami.localhost http://{HOST_IP}:80

  whoami:
    container_name: whoami
    image: containous/whoami
    networks:
      - traefik_proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      - traefik.http.routers.whoami.entrypoints=http
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`) # keep as .localhost (see curl command above)

## Google OAuth -

  oauth:
    container_name: oauth
#    image: thomseddon/traefik-forward-auth # thomseddeon's image doesnt support OIDC_ISSUER yet
    image: funkypenguin/traefik-forward-auth
    restart: always
    networks:
      - traefik_proxy
    environment:
      - CLIENT_ID=$AUTH_CLIENT_ID
      - CLIENT_SECRET=$AUTH_CLIENT_SECRET
      ## This is based on using the Master realm. Create a new client, this will go into your CLIENT_ID, CLIENT_SECRET details.
      - OIDC_ISSUER=https://keycloak.${DOMAINNAME}/auth/realms/master
      - SECRET=$AUTH_SECRET
      - AUTH_HOST=oauth.$DOMAINNAME
      - COOKIE_DOMAIN=$DOMAINNAME
      - COOKIE_SECURE=true
      - URL_PATH=/_oauth
#      - WHITELIST=$MY_EMAIL
      - LOG_LEVEL=info
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## HTTPS entrypoint
      - traefik.http.routers.oauth.entrypoints=https
      - traefik.http.routers.oauth.rule=Host(`oauth.$DOMAINNAME`)
      - traefik.http.routers.oauth.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.oauth.middlewares=oauth-headers
      - traefik.http.middlewares.oauth-headers.headers.SSLHost=oauth.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.oauth.middlewares=secure-chain-nocookie@file
      ## Services
      - traefik.http.routers.oauth.service=oauth
      - traefik.http.services.oauth.loadbalancer.server.port=4181

  ## To fix net.core.*mem issues add these to the bottom of /etc/sysctl.conf
  ## https://forums.docker.com/t/how-to-tune-kernel-properties-in-docker-images/25291
    # ## Allow a 25MB UDP receive buffer for JGroups
    # net.core.rmem_max = 26214400
    # ## Allow a 1MB UDP send buffer for JGroups
    # net.core.wmem_max = 1048576

    # or

    # sudo sysctl -w net.core.rmem_max=26214400
    # sudo sysctl -w net.core.wmem_max=1048576
    ## https://www.cyberciti.biz/faq/reload-sysctl-conf-on-linux-using-sysctl/

  ## Suggested procedure to create your KeyCloak Database:
  ## Change the <password>
    # docker exec -it mariadb mysql -uroot -p$MYSQL_ROOT_PASSWORD
    # CREATE DATABASE keycloak CHARACTER SET = utf8 COLLATE = utf8_unicode_ci;
    # GRANT ALL PRIVILEGES ON keycloak.* TO 'keycloak'@'keycloak.traefik_proxy' IDENTIFIED BY '<password>';
    # FLUSH PRIVILEGES;
    # exit

  ## Initialize admin account:
    # docker exec keycloak keycloak/bin/add-user-keycloak.sh -u <username> -p <password>

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    restart: always
    networks:
      - traefik_proxy
#    ports:
#      - "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
      - KEYCLOAK_USER=$MY_USERNAME
      - KEYCLOAK_PASSWORD=$MY_PASSWORD
      - DB_VENDOR=mariadb
      - DB_ADDR=mariadb
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=$MYSQL_PASSWORD
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_HOSTNAME=keycloak.$DOMAINNAME
#      - JDBC_PARAMS=connectTimeout=30000
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## HTTPS entrypoint
      - traefik.http.routers.keycloak-rtr.entrypoints=https
      - traefik.http.routers.keycloak-rtr.rule=Host(`keycloak.$DOMAINNAME`)
      - traefik.http.routers.keycloak-rtr.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.keycloak-rtr.middlewares=keycloak-headers
      - traefik.http.middlewares.keycloak-headers.headers.SSLHost=keycloak.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.keycloak-rtr.middlewares=noauth-chain-nocookie@file
      ## Services
      - traefik.http.routers.keycloak-rtr.service=keycloak-svc
      - traefik.http.services.keycloak-svc.loadbalancer.server.port=8080

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
