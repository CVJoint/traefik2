version: "3.7"
services:

#https://docs.gitea.io/en-us/fail2ban-setup/

  ## Suggested procedure to create your Gitea Database:
  ## Replace <these values>
    # docker exec -it mariadb mysql -uroot -p$MYSQL_ROOT_PASSWORD
    # CREATE DATABASE keycloak CHARACTER SET = utf8 COLLATE = utf8_unicode_ci;
    # GRANT ALL PRIVILEGES ON keycloak.* TO 'keycloak'@'keycloak.traefik_proxy' IDENTIFIED BY '<password>';
    # FLUSH PRIVILEGES;
    # exit

## Gitea - Selfhosted Git Service
  # To generate SECRET_KEY:
  # docker exec -it gitea gitea generate secret SECRET_KEY
  gitea:
    container_name: gitea
    image: gitea/gitea
    restart: always
    networks:
      - traefik_proxy
#    ports:
#      - "3000:3000"
#      - "127.0.0.1:2222:22"
    volumes:
      - ${USERDIR}/docker/gitea:/data
#      /home/git/gitea/log/docker/gitea.log
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - SSH_PORT=2222
      - DB_TYPE=mysql
      - DB_HOST=mariadb:3306
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=${MYSQL_ROOT_PASSWORD}
      - RUN_MODE=prod
#      - INSTALL_LOCK=true # Disallow access to the install page. Enable after first sign in
#      - SECRET_KEY=”” # Global secret key. This should be changed. If this has a value and INSTALL_LOCK is empty, INSTALL_LOCK will automatically set to true.
#      - DISABLE_REGISTRATION=false # Disable registration, after which only admin can create accounts for users.
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      ## HTTPS entrypoint
      - traefik.http.routers.gitea.entrypoints=https
      - traefik.http.routers.gitea.rule=Host(`gitea.$DOMAINNAME`)
      - traefik.http.routers.gitea.tls.certresolver=cloudflare
      ## Middlewares - Unique
      - traefik.http.routers.gitea.middlewares=gitea-headers
      - traefik.http.middlewares.gitea-headers.headers.SSLHost=gitea.$DOMAINNAME
      ## Middlewares - Chain
      - traefik.http.routers.gitea.middlewares=noauth-chain@file
      ## Services
      - traefik.http.routers.gitea.service=gitea-svc
      - traefik.http.services.gitea-svc.loadbalancer.server.port=3000
      ## TCP
      - traefik.tcp.routers.gitea-tcp.entrypoints=ssh
      - traefik.tcp.routers.gitea-tcp.tls=true
      - traefik.tcp.routers.gitea-tcp.rule=HostSNI(`*`)
      - traefik.tcp.routers.gitea-tcp.service=gitea-tcp-svc
      - traefik.tcp.services.gitea-tcp-svc.loadbalancer.server.port=22

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
