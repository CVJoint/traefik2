## (Almost) Full traefik.toml config example here:
  ## https://github.com/containous/traefik/blob/v2.0/traefik.sample.toml
## https://github.com/containous/traefik/issues/4688#issuecomment-477814279
## https://github.com/realtarget/traefik2-docker-stack

[global]
  checkNewVersion = true
  sendAnonymousUsage = true

[entryPoints]
  ## HTTP
  [entryPoints.http]
    address = ":80"
    [entryPoints.http.proxyProtocol]
      trustedIPs = ["192.168.50.1/32", "192.168.1.1/32", "127.0.0.1/32"] # "192.168.50.1/32" is my traefik_proxy gateway
#      insecure = true
    [entryPoints.http.forwardedHeaders]
      trustedIPs = ["192.168.50.1/32", "192.168.1.1/32", "127.0.0.1/32"]
#      insecure = true
  ## HTTPS
  [entryPoints.https]
    address = ":443"
  ## TRAEFIK
  [entryPoints.traefik]
    address = ":8080"
  ## OTHERS
  [entryPoints.ssh]
    address = ":2222"
  [entryPoints.mariadb-port]
    address = ":3306"
  [entryPoints.postgres-port]
    address = ":5432"
  [entryPoints.mongo-port]
    address = ":27017"
  [entryPoints.redis-port]
    address = ":6379"

[log]
  ##Log level (Default: "ERROR")
  level = "INFO" ## DEBUG, INFO, WARN, ERROR, FATAL, PANIC

  ##Sets the filepath for the traefik log. If not specified, stdout will be used. (Default: os.Stdout)
#  filePath = "log/traefik.log"

  ##Format is either "json" or "common". (Default: "common")
#  format = "json"

#[accessLog]
  ##Sets the filepath for the access log. If not specified, stdout will be used. (Default: os.Stdout)
#  filePath = "/path/to/log/log.txt"

  ##Format is either "json" or "common". (Default: "common")
#  format = "json"

[api]
  ##Name of the related entry point (Default: "traefik")
  #entryPoint = "traefik"

  ##Enabled Dashboard (Default: true)
  dashboard = true
  insecure = true

  ##Enable Debug (Default: false)
  #debug = true

#[http]

#  [http.routers]

#    [http.routers.api]
#        rule = "PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
#        service = "api@internal"
#        insecure = true

#[ping]
  ##Name of the related entry point (Default: "traefik")
#  entryPoint = "traefik"

[providers]
  [providers.docker]
    ##Docker server endpoint. Can be a tcp or a unix socket endpoint. (Default: "unix:///var/run/docker.sock")
#    endpoint = "tcp://10.10.10.10:2375"

    ##Default host rule. Optional. (Default: "Host(`{{ normalize .Name }}`)"  )
#    defaultRule = "Host(`{{ normalize .Name }}.docker.localhost`)"

    ##Expose containers by default in traefik (Default: true)
    exposedByDefault = false

    watch = true
    swarmMode = false
    network = "traefik_proxy"

  [providers.file]
    ##Provide a dedicated file, or a directory of several dedicated files
#    filename = "/etc/traefik/rules/middlewares.toml"
    directory = "/etc/traefik/rules"
    watch = true


# Enable ACME (Let's Encrypt): automatic SSL.
[certificatesResolvers.cloudflare.acme]
  # Email address used for registration.
  email = "your email"
  # File or key used for certificates storage.
  storage = "/etc/traefik/acme/acme.json"

  # CA server to use. Uncomment the line to use Let's Encrypt's staging server, leave commented to go to prod. (Optional)
#  caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"

  # Use a DNS-01 ACME challenge rather than HTTP-01 challenge.
  # Note: mandatory for wildcard certificate generation.
  [certificatesResolvers.cloudflare.acme.dnsChallenge]
    # DNS provider used.
    provider = "cloudflare"
    resolvers = ["1.1.1.1:53", "1.0.0.1:53"]
    # By default, the provider will verify the TXT DNS challenge record before letting ACME verify.
    # If delayBeforeCheck is greater than zero, this check is delayed for the configured duration in seconds.
    # Useful if internal networks block external DNS queries.
    #
    # Optional
    # Default: 0
    #
    # delayBeforeCheck = 0
